{"version":3,"sources":["components/TimeDateComponent.js","components/UserInputComponent.js","components/ClockComponent.js","components/StopwatchComponent.js","App.js","serviceWorker.js","index.js","images/background.jpg","images/amc_loading.gif"],"names":["TimeDate","props","state","zaman","Date","d","weekday","Array","a","getDay","class","id","style","fontFamily","fontSize","color","this","toLocaleTimeString","position","textAlign","className","toLocaleDateString","interval","setInterval","tick","setState","Component","UserInput","userTime","userInput","direction","type","onClick","value","opacity","resetCount","resetZero","document","getElementById","disabled","x","i","componentWillUnmount","componentDidMount","countDownTime","clearInterval","App","size","timeFormat","hourFormat","React","Clock","time","radius","drawingContext","draw24hour","toLowerCase","trim","drawRoman","getDrawingContext","timerId","refs","clockCanvas","getContext","translate","ctx","drawFace","drawNumbers","drawTicks","drawTime","beginPath","arc","Math","PI","fillStyle","fill","grad","createRadialGradient","addColorStop","strokeStyle","lineWidth","stroke","ang","num","romans","fontBig","fontSmall","textBaseline","rotate","font","fillText","toString","numTicks","tickAng","tickX","tickY","sin","cos","moveTo","lineTo","now","hour","getHours","minute","getMinutes","second","getSeconds","drawHand","length","width","lineCap","String","height","ref","defaultProps","ReactDOM","render","leftPad","n","join","slice","Stopwatch","forEach","method","bind","initialState","isRunning","lapTimes","timeElapsed","startTimer","timer","concat","startTime","update","delta","marginBottom","toggle","marginTop","lap","reset","TimeElapsed","seconds","min","floor","sec","msec","toFixed","substring","units","getUnits","LapTimes","rows","map","lapTime","index","key","firstComponent","Promise","resolve","reject","setTimeout","then","transition","zIndex","src","loadingProgress","alt","background","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.5e95462c.chunk.js","sourcesContent":["// eslint-disable-next-line no-unused-vars\r\nimport React, {Component} from \"react\";\r\nimport '../styles/mainStyle.css'\r\n\r\nclass TimeDate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {zaman: new Date()};\r\n\r\n    }\r\n\r\n    render() {\r\n        var d = new Date();\r\n        var weekday = new Array(7);\r\n        weekday[0] = \"Sunday\";\r\n        weekday[1] = \"Monday\";\r\n        weekday[2] = \"Tuesday\";\r\n        weekday[3] = \"Wednesday\";\r\n        weekday[4] = \"Thursday\";\r\n        weekday[5] = \"Friday\";\r\n        weekday[6] = \"Saturday\";\r\n\r\n        var a = weekday[d.getDay()];\r\n\r\n        var mydict = {'Sunday': 'یکشنبه', 'Monday': 'دو شنبه','Tuesday':'سه شنبه','Wednesday':'چهارشنبه','Thursday':'پنجشنبه','Friday':'جمعه','Saturday':'شنبه'};\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <p id=\"time\">\r\n                    <p style={{fontFamily:\"Calibri, cursive\",fontSize:\"40px\",color:\"rgb(3, 69, 55)\"}}><i>{this.state.zaman.toLocaleTimeString('uk')}</i></p>\r\n                    ({mydict[a]}) &nbsp;\r\n                    {a}\r\n                </p>\r\n                <div class=\"row\" style={{position:\"relative\",textAlign:\"center\"}}>\r\n                    <br/>\r\n                    <div class=\"items col-4\">\r\n                        <p class=\"txts\">(خورشیدی) Irani</p>\r\n                        <p className=\"dates\">{this.state.zaman.toLocaleDateString('fa-IR')}</p>\r\n                        <hr/>\r\n\r\n                    </div>\r\n                    <div class=\"items col-4\">\r\n                        <p class=\"txts\"> (میلادی) Gregorian</p>\r\n                        <p className=\"dates\">{this.state.zaman.toLocaleDateString('en')}</p>\r\n                        <hr/>\r\n                    </div>\r\n                    <div class=\"items col-4-5\">\r\n                        <p className=\"txts\">(قمری) Hijri</p>\r\n                        <p className=\"dates\">{this.state.zaman.toLocaleDateString('ar-SA')}</p>\r\n\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.tick(), 1000)\r\n    }\r\n\r\n    tick() {\r\n        this.setState({zaman: new Date()})\r\n    }\r\n}\r\n\r\nexport default TimeDate","// eslint-disable-next-line no-unused-vars\r\nimport React,{Component} from \"react\";\r\nimport '../styles/mainStyle.css';\r\n\r\nclass UserInput extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={userTime: 0};\r\n        this.state={userInput: 0}\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{direction: \"rtl\", textAlign: \"center\", fontSize: \"40px\",position:\"static\"}}>\r\n                <p id=\"countdown\">Countdown (شمارش معکوس)</p>\r\n                <input type=\"number\" id=\"input\"/>\r\n                <input type=\"button\" onClick={() => this.userInput()} id=\"myBtn\" value=\"شمارش\"/>\r\n\r\n                <p id={\"Pid\"} style={{color:\"white\",opacity:0}}>{this.state.userInput}</p>\r\n                <p id={\"finish_message\"} style={{color:\"white\",fontFamily:\"calibri,sans\",opacity:0}}>تمام</p>\r\n                <input id=\"rstBtn\" type=\"button\" onClick={()=>this.resetCount()} value=\"شروع دوباره\"/>\r\n                <input id=\"reset\" type=\"button\" onClick={()=>this.resetZero()} value=\"ریست\"/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    userInput(){\r\n        document.getElementById(\"myBtn\").disabled=true;\r\n        document.getElementById(\"Pid\").style.color=\"black\";\r\n        document.getElementById(\"Pid\").style.opacity=1;\r\n        var x = document.getElementById(\"input\").value;\r\n        this.setState({userInput:x});\r\n        // console.log(x)\r\n    }\r\n\r\n    countDownTime(){\r\n        document.getElementById(\"rstBtn\").disabled=true;\r\n        document.getElementById(\"reset\").disabled=true;\r\n        var i;\r\n        i= this.state.userInput;\r\n        this.setState({userInput: i-1});\r\n        // console.log(this.state.userInput);\r\n        if (this.state.userInput>1){\r\n            document.getElementById(\"reset\").disabled=false;\r\n        }\r\n        if (this.state.userInput===0){\r\n            this.componentWillUnmount();\r\n            document.getElementById(\"finish_message\").style.color=\"red\";\r\n            document.getElementById(\"finish_message\").style.opacity=1;\r\n            document.getElementById(\"rstBtn\").disabled=false;\r\n            document.getElementById(\"finish_message\").style.opacity=1;\r\n        }\r\n    }\r\n\r\n    resetCount(){\r\n        document.getElementById(\"finish_message\").style.opacity=0;\r\n        var x = document.getElementById(\"input\").value;\r\n        this.setState({userInput:x});\r\n        this.componentDidMount();\r\n    }\r\n\r\n    resetZero(){\r\n        this.componentWillUnmount();\r\n        this.setState({userInput:1});\r\n        this.componentDidMount()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval= setInterval(()=>this.countDownTime(),1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n}\r\n\r\nexport default UserInput","import React, {Component} from \"react\";\r\nimport '../styles/clockStyle.css'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-lg-offset-3\">\r\n                        <div className=\"text-center\">\r\n                            <h1>React Clock</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <Clock size={400} timeFormat=\"24hour\" hourFormat=\"standard\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {time: new Date()};\r\n        this.radius = this.props.size / 2;\r\n        this.drawingContext = null;\r\n        this.draw24hour = this.props.timeFormat.toLowerCase().trim() === \"24hour\";\r\n        this.drawRoman = !this.draw24hour && this.props.hourFormat.toLowerCase().trim() === \"roman\";\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDrawingContext();\r\n        this.timerId = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    getDrawingContext() {\r\n        this.drawingContext = this.refs.clockCanvas.getContext('2d');\r\n        this.drawingContext.translate(this.radius, this.radius);\r\n        this.radius *= 0.589;\r\n    }\r\n\r\n    tick() {\r\n        this.setState({time: new Date()});\r\n        const radius = this.radius;\r\n        let ctx = this.drawingContext;\r\n        this.drawFace(ctx, radius);\r\n        this.drawNumbers(ctx, radius);\r\n        this.drawTicks(ctx, radius);\r\n        this.drawTime(ctx, radius);\r\n    }\r\n\r\n    drawFace(ctx, radius) {\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fill();\r\n\r\n        const grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\r\n        grad.addColorStop(0, \"#333\");\r\n        grad.addColorStop(0.5, \"white\");\r\n        grad.addColorStop(1, \"#333\");\r\n        ctx.strokeStyle = grad;\r\n        ctx.lineWidth = radius * 0.1;\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, radius * 0.05, 0, 2 * Math.PI);\r\n        ctx.fillStyle = \"#333\";\r\n        ctx.fill();\r\n    }\r\n\r\n    drawNumbers(ctx, radius) {\r\n        const romans = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\"];\r\n        const fontBig = radius * 0.15 + \"px Arial\";\r\n        const fontSmall = radius * 0.075 + \"px Arial\";\r\n        let ang, num;\r\n\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.textAlign = \"center\";\r\n        for (num = 1; num < 13; num++) {\r\n            ang = num * Math.PI / 6;\r\n            ctx.rotate(ang);\r\n            ctx.translate(0, -radius * 0.78);\r\n            ctx.rotate(-ang);\r\n            ctx.font = fontBig;\r\n            ctx.fillStyle = \"black\";\r\n            ctx.fillText(this.drawRoman ? romans[num - 1] : num.toString(), 0, 0);\r\n            ctx.rotate(ang);\r\n            ctx.translate(0, radius * 0.78);\r\n            ctx.rotate(-ang);\r\n\r\n            // Draw inner numerals for 24 hour time format\r\n            if (this.draw24hour) {\r\n                ctx.rotate(ang);\r\n                ctx.translate(0, -radius * 0.60);\r\n                ctx.rotate(-ang);\r\n                ctx.font = fontSmall;\r\n                ctx.fillStyle = \"red\";\r\n                ctx.fillText((num + 12).toString(), 0, 0);\r\n                ctx.rotate(ang);\r\n                ctx.translate(0, radius * 0.60);\r\n                ctx.rotate(-ang);\r\n            }\r\n        }\r\n\r\n        // Write author text\r\n        ctx.font = fontSmall;\r\n        ctx.fillStyle = \"#3D3B3D\";\r\n        ctx.translate(0, radius * 0.30);\r\n        ctx.fillText(\"M.Shahabedin\", 0, 0);\r\n        ctx.translate(0, -radius * 0.30);\r\n    }\r\n\r\n    drawTicks(ctx, radius) {\r\n        let numTicks, tickAng, tickX, tickY;\r\n\r\n        for (numTicks = 0; numTicks < 60; numTicks++) {\r\n\r\n            tickAng = (numTicks * Math.PI / 30);\r\n            tickX = radius * Math.sin(tickAng);\r\n            tickY = -radius * Math.cos(tickAng);\r\n\r\n            ctx.beginPath();\r\n            ctx.lineWidth = radius * 0.010;\r\n            ctx.moveTo(tickX, tickY);\r\n            if (numTicks % 5 === 0) {\r\n                ctx.lineTo(tickX * 0.88, tickY * 0.88);\r\n            } else {\r\n                ctx.lineTo(tickX * 0.92, tickY * 0.92);\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    drawTime(ctx, radius) {\r\n        const now = this.state.time;\r\n        let hour = now.getHours();\r\n        let minute = now.getMinutes();\r\n        let second = now.getSeconds();\r\n\r\n        // hour\r\n        hour %= 12;\r\n        hour = (hour * Math.PI / 6) + (minute * Math.PI / (6 * 60)) + (second * Math.PI / (360 * 60));\r\n        this.drawHand(ctx, hour, radius * 0.5, radius * 0.05);\r\n        // minute\r\n        minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));\r\n        this.drawHand(ctx, minute, radius * 0.8, radius * 0.05);\r\n        // second\r\n        second = (second * Math.PI / 30);\r\n        this.drawHand(ctx, second, radius * 0.9, radius * 0.02, \"red\");\r\n    }\r\n\r\n    drawHand(ctx, position, length, width, color) {\r\n        color = color || \"black\";\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.lineCap = \"round\";\r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = color;\r\n        ctx.moveTo(0, 0);\r\n        ctx.rotate(position);\r\n        ctx.lineTo(0, -length);\r\n        ctx.stroke();\r\n        ctx.rotate(-position);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Clock\" style={{width: String(this.props.size) + 'px'}}>\r\n                <canvas width={this.props.size} height={this.props.size} ref=\"clockCanvas\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nClock.defaultProps = {\r\n    size: 400, // size in pixels => size is length & width\r\n    timeFormat: \"24hour\", // {standard | 24hour} => if '24hour', hourFormat must be 'standard'\r\n    hourFormat: \"standard\" // {standard | roman}\r\n};\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);\r\n\r\nexport default Clock;\r\n","import React,{Component} from \"react\";\r\n\r\nconst leftPad = (width, n) => {\r\n    if ((n + '').length > width) {\r\n        return n;\r\n    }\r\n    const padding = new Array(width).join('0');\r\n    return (padding + n).slice(-width);\r\n};\r\n\r\nclass Stopwatch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        [\"lap\", \"update\", \"reset\", \"toggle\"].forEach((method) => {\r\n            this[method] = this[method].bind(this);\r\n        });\r\n\r\n        this.state = this.initialState = {\r\n            isRunning: false,\r\n            lapTimes: [],\r\n            timeElapsed: 0,\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({isRunning: !this.state.isRunning}, () => {\r\n            this.state.isRunning ? this.startTimer() : clearInterval(this.timer)\r\n        });\r\n    }\r\n    lap() {\r\n        const {lapTimes, timeElapsed} = this.state;\r\n        this.setState({lapTimes: lapTimes.concat(timeElapsed)});\r\n    }\r\n    reset() {\r\n        clearInterval(this.timer);\r\n        this.setState(this.initialState);\r\n    }\r\n    startTimer() {\r\n        this.startTime = Date.now();\r\n        this.timer = setInterval(this.update, 10);\r\n    }\r\n    update() {\r\n        const delta = Date.now() - this.startTime;\r\n        this.setState({timeElapsed: this.state.timeElapsed + delta});\r\n        this.startTime = Date.now();\r\n    }\r\n    render() {\r\n        const {isRunning, lapTimes, timeElapsed} = this.state;\r\n        return (\r\n            <div style={{direction:\"rtl\",fontFamily:\"Arabic Typesetting\",fontSize:\"30px\"}}>\r\n                <div style={{direction: \"rtl\", textAlign: \"center\", fontSize: \"40px\",position:\"static\"}}>\r\n                    <p id=\"stopwatch\" style={{marginBottom:\"10%\"}}>(کورنومتر) Stopwatch</p>\r\n                </div>\r\n                <TimeElapsed id=\"timer\" timeElapsed={timeElapsed}/>\r\n                <button onClick={this.toggle} style={{marginTop:\"60px\"}}>\r\n                    {isRunning ? 'توقف' : 'شروع'}\r\n                </button>\r\n                <button\r\n                    onClick={isRunning ? this.lap : this.reset}\r\n                    disabled={!isRunning && !timeElapsed}\r\n                >\r\n                    {isRunning || !timeElapsed ? 'ذخیره' : 'ریست'}\r\n                </button>\r\n                {lapTimes.length > 0 && <LapTimes lapTimes={lapTimes} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass TimeElapsed extends React.Component {\r\n    getUnits() {\r\n        var seconds = this.props.timeElapsed / 1000;\r\n\r\n        return {\r\n            min: Math.floor(seconds / 60).toString(),\r\n            sec: Math.floor(seconds % 60).toString(),\r\n            msec: (seconds % 1).toFixed(3).substring(2)\r\n        };\r\n    }\r\n    render() {\r\n        var units = this.getUnits();\r\n        return (\r\n            <div id={this.props.id}>\r\n                <span>{leftPad(2, units.min)}:</span>\r\n                <span>{leftPad(2, units.sec)}.</span>\r\n                <span>{units.msec}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass LapTimes extends React.Component {\r\n    render() {\r\n        const rows = this.props.lapTimes.map((lapTime, index) =>\r\n            <tr key={++index}>\r\n                <td>{index}</td>\r\n                <td><TimeElapsed timeElapsed={lapTime} /></td>\r\n            </tr>\r\n        );\r\n        return (\r\n            <table id=\"lap-times\">\r\n                <thead>\r\n                <th>دور</th>\r\n                <th>زمان</th>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\n// ReactDOM.render(\r\n//     <Stopwatch />,\r\n//     document.getElementById('container')\r\n// );\r\n\r\n\r\nexport default Stopwatch;","// eslint-disable-next-line no-unused-vars\nimport React,{Component} from \"react\";\nimport TimeDate from \"./components/TimeDateComponent\";\nimport UserInput from \"./components/UserInputComponent\";\nimport Clock from \"./components/ClockComponent\";\nimport background from '../src/images/background.jpg'\nimport '../src/styles/mainStyle.css'\nimport Stopwatch from \"./components/StopwatchComponent\";\nimport loadingProgress from \"../src/images/amc_loading.gif\"\nimport ScriptTag from 'react-script-tag';\nimport {Helmet} from \"react-helmet\";\n\n\nclass firstComponent extends Component{\n\n  render(){\n\n      let p = new Promise((resolve , reject) =>{\n          setTimeout(() =>{\n              resolve()\n          },800)\n      });\n\n      p.then( ()=>{\n          let a = document.getElementById(\"loading_division\");\n          // a.style.cssText = \"transition: all 2s; display: none\";\n          a.style.transition=\"opacity 1s\";\n          a.style.opacity=\"0\";\n\n          let b = document.getElementById(\"loading_division\");\n          b.style.zIndex=\"-1\";\n      });\n\n\n\n    return(\n        <div>\n            <div id=\"loading_division\">\n                <img src={loadingProgress} id=\"loading\" alt=\"sdfds\"/>\n            </div>\n            <img id=\"backgroundImage\" src={background}/>\n\n          <Clock/>\n          <TimeDate/>\n\n\n          <div class=\"container\">\n              <div class=\"row\" style={{position:\"relative\",textAlign:\"center\"}}>\n                  <div className=\"col-6 items\" id=\"countdownDiv\">\n                      <UserInput/>\n                  </div>\n                  <div className=\"col-6 items\" style={{marginBottom:\"10%\"}}>\n                      <Stopwatch/>\n                  </div>\n              </div>\n          </div>\n            <div id=\"mydiv\"/>\n        </div>\n    )\n  }\n}\n\n\n\nexport default firstComponent","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.ca9a87ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amc_loading.0b9309cf.gif\";"],"sourceRoot":""}